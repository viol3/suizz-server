{
  "version": 3,
  "sources": ["../../../src/EnokiClient/type.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { PublicKey } from '@mysten/sui/cryptography';\nimport type { ZkLoginSignatureInputs } from '@mysten/sui/zklogin';\n\nexport type AuthProvider = 'google' | 'facebook' | 'twitch' | 'onefc' | 'playtron';\nexport type EnokiNetwork = 'mainnet' | 'testnet' | 'devnet';\nexport type EnokiDomainNetwork = 'mainnet' | 'testnet';\nexport type EnokiSubanameStatus = 'PENDING' | 'ACTIVE';\n\nexport interface GetAppApiInput {}\nexport interface GetAppApiResponse {\n\tallowedOrigins: string[];\n\tauthenticationProviders: {\n\t\tproviderType: AuthProvider;\n\t\tclientId: string;\n\t}[];\n\tdomains: {\n\t\tnftId: string;\n\t\tname: string;\n\t\tnetwork: EnokiDomainNetwork;\n\t}[];\n}\n\nexport interface GetZkLoginApiInput {\n\tjwt: string;\n}\nexport interface GetZkLoginApiResponse {\n\taddress: string;\n\tpublicKey: string;\n\tsalt: string;\n}\n\nexport interface GetZkLoginAddressesApiInput {\n\tjwt: string;\n}\nexport interface GetZkLoginAddressesApiResponse {\n\taddresses: {\n\t\tclientId: string;\n\t\tsalt: string;\n\t\taddress: string;\n\t\tpublicKey: string;\n\t\tlegacy?: boolean;\n\t}[];\n}\n\nexport interface CreateZkLoginNonceApiInput {\n\tnetwork?: EnokiNetwork;\n\tephemeralPublicKey: PublicKey;\n\tadditionalEpochs?: number;\n}\nexport interface CreateZkLoginNonceApiResponse {\n\tnonce: string;\n\trandomness: string;\n\tepoch: number;\n\tmaxEpoch: number;\n\testimatedExpiration: number;\n}\n\nexport interface CreateZkLoginZkpApiInput {\n\tnetwork?: EnokiNetwork;\n\tjwt: string;\n\tephemeralPublicKey: PublicKey;\n\trandomness: string;\n\tmaxEpoch: number;\n}\nexport interface CreateZkLoginZkpApiResponse extends ZkLoginSignatureInputs {}\n\nexport type CreateSponsoredTransactionApiInput = {\n\tnetwork?: EnokiNetwork;\n\ttransactionKindBytes: string;\n} & (\n\t| {\n\t\t\tjwt: string;\n\t\t\tsender?: never;\n\t\t\tallowedAddresses?: never;\n\t\t\tallowedMoveCallTargets?: never;\n\t  }\n\t| {\n\t\t\tsender: string;\n\t\t\tallowedAddresses?: string[];\n\t\t\tallowedMoveCallTargets?: string[];\n\t\t\tjwt?: never;\n\t  }\n);\n\nexport interface CreateSponsoredTransactionApiResponse {\n\tbytes: string;\n\tdigest: string;\n}\n\nexport interface ExecuteSponsoredTransactionApiInput {\n\tdigest: string;\n\tsignature: string;\n}\n\nexport interface ExecuteSponsoredTransactionApiResponse {\n\tdigest: string;\n}\n\nexport interface GetSubnamesApiInput {\n\taddress?: string;\n\tnetwork?: EnokiDomainNetwork;\n\tdomain?: string;\n}\nexport interface GetSubnamesApiResponse {\n\tsubnames: {\n\t\tname: string;\n\t\tstatus: EnokiSubanameStatus;\n\t}[];\n}\n\nexport type CreateSubnameApiInput = {\n\tdomain: string;\n\tnetwork?: EnokiDomainNetwork;\n\tsubname: string;\n} & (\n\t| {\n\t\t\tjwt: string;\n\t\t\ttargetAddress?: never;\n\t  }\n\t| {\n\t\t\ttargetAddress: string;\n\t\t\tjwt?: never;\n\t  }\n);\nexport interface CreateSubnameApiResponse {\n\tname: string;\n}\n\nexport interface DeleteSubnameApiInput {\n\tdomain: string;\n\tnetwork?: EnokiDomainNetwork;\n\tsubname: string;\n}\nexport interface DeleteSubnameApiResponse {\n\tname: string;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
